<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.api.db.dao.TbUserDao">
    <select id="searchUserPermissions" parameterType="int" resultType="java.lang.String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <select id="searchIdByOpenId" parameterType="String" resultType="java.lang.Integer">
        SELECT id FROM tb_user WHERE open_id=#{openId} AND status = 1
    </select>
    <select id="searchUserSummary" parameterType="int" resultType="java.util.HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
        WHERE u.id=#{userId} AND u.status=1
    </select>
    <select id="searchUserInfo" parameterType="int" resultType="java.util.HashMap">
        SELECT
            u.open_id AS openId,
            u.username,
            u.nickname,
            u.name,
            u.photo,
            u.sex,
            u.tel,
            u.email,
            d.dept_name AS dept,
            u.hiredate,
            u.status,
            ( SELECT GROUP_CONCAT( role_name separator "," ) FROM tb_role WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) ) ) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId} AND u.status = 1
    </select>
    <select id="searchDeptManagerId" parameterType="int" resultType="java.lang.Integer">
        SELECT
            u2.id
        FROM tb_user u1 JOIN tb_user u2 ON u1.dept_id=u2.dept_id
                        JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id=#{id} AND r.id=2 AND u1.status = 1 AND u2.status = 1
        ORDER BY u2.create_time DESC
            LIMIT 1
    </select>
    <select id="searchGmId" resultType="java.lang.Integer">
        SELECT
            u.id
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id=1 AND u.status = 1
        ORDER BY u.create_time DESC
            LIMIT 1
    </select>
    <select id="searchById" parameterType="int" resultType="java.util.HashMap">
        SELECT
            id, username, name, sex, tel, email, hiredate, role, dept_id AS deptId, status,
            AES_DECRYPT(UNHEX(password),username) AS password
        FROM
            tb_user
        WHERE id=#{userId}
    </select>
    <select id="searchAllUser" resultType="java.util.HashMap">
        SELECT id,`name`
        FROM tb_user
        WHERE status = 1
    </select>

    <!--用户登录-->
    <select id="login" parameterType="HashMap" resultType="java.lang.Integer">
        SELECT id
        FROM tb_user
        WHERE username = #{username}
        	AND PASSWORD = HEX(AES_ENCRYPT( #{password},#{username}))
        limit 1;
    </select>

    <!--更新用户密码-->
    <update id="updatePasswordByid" parameterType="java.util.HashMap">
        update  tb_user
        set password=HEX(AES_ENCRYPT(#{password},username))
        where id=#{userId}
    </update>

    <!--分页查询工作人员记录数-->
    <select id="selectAllByPage" parameterType="HashMap" resultType="java.util.HashMap">
        SELECT
        distinct u.id,
        u.name,
        u.sex,
        u.tel,
        u.email,
        u.hiredate as hiredate,
        d.dept_name as deptName,
        u.status,
        (
        SELECT
        GROUP_CONCAT( role_name SEPARATOR "," ) FROM tb_role r
        WHERE
        JSON_CONTAINS(u.role,CONVERT ( id, CHAR ))) AS roleName
        FROM
        tb_user u
        INNER JOIN tb_role r ON JSON_CONTAINS( u.role, CONVERT ( r.id, CHAR ))
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        <where>
            <if test="name!=null">
                and name like "%${name}%"
            </if>
            <if test="sex!=null">
                and sex=#{sex}
            </if>
            <if test="role!=null">
                and r.role_name=#{role}
            </if>
            <if test="deptId!=null">
                and d.id=#{deptId}
            </if>
            <if test="status!=null">
                and status=#{status}
            </if>
        </where>

        limit #{start},#{length}
    </select>

    <!--查询总条数-->
    <select id="searchUserCount" resultType="java.lang.Long" parameterType="java.util.HashMap">
        SELECT
        count(distinct u.id)
        FROM
        tb_user u
        INNER JOIN tb_role r ON JSON_CONTAINS(
        u.role,CONVERT ( r.id, CHAR ))
        LEFT JOIN tb_dept d on u.dept_id=d.id
        <where>
            <if test="name!=null">
                and name=#{name}
            </if>
            <if test="sex!=null">
                and sex=#{sex}
            </if>
            <if test="role!=null">
                and r.role_name=#{role}
            </if>
            <if test="deptId!=null">
                and d.id=#{deptId}
            </if>
            <if test="status!=null">
                and u.status=#{status}
            </if>
        </where>
    </select>

    <!--插入用户-->
    <insert id="insertUser" parameterType="com.example.emos.api.db.pojo.TbUser">
        INSERT INTO tb_user
        SET
        <if test="username!=null">
            username=#{username},
        </if>
        <if test="password!=null">
            `password`=HEX(AES_ENCRYPT(#{password},#{username})),
        </if>
        <if test="openId!=null">
            open_id=#{openId},
        </if>
        <if test="nickname!=null">
            nickname=#{nickname},
        </if>
        <if test="photo!=null">
            photo=#{photo},
        </if>
        <if test="name!=null">
            `name`=#{name},
        </if>
        <if test="sex!=null">
            sex=#{sex},
        </if>
        <if test="tel!=null">
            tel=#{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate=#{hiredate},
        </if>
        role=#{role},
        <if test="root!=null">
            root=#{root},
        </if>

        <if test="deptId!=null">
            dept_id=#{deptId},
        </if>
        `status`=#{status},
        create_time=#{createTime}
    </insert>

    <update id="update" parameterType="HashMap">
        UPDATE tb_user
        SET
        <if test="username!=null and password!=null">
            username = #{username},
            password = HEX(AES_ENCRYPT(#{password},#{username})),
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email = #{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        <if test="role!=null">
            role = #{role},
        </if>
        <if test="root!=null">
            root = #{root},
        </if>
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        <if test="status!=null">
            status = #{status},
        </if>
        id=id
        WHERE id=#{userId}
    </update>
    <delete id="deleteUserByIds">
        DELETE FROM tb_user
        WHERE id IN
        <foreach collection="array" open="(" separator="," close=")" item="one">
            #{one}
        </foreach>
        AND root=FALSE
    </delete>

    <select id="searchUserRoles" parameterType="int" resultType="java.lang.String">
        SELECT r.role_name AS roleName
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
        WHERE u.id=#{userId}
    </select>

    <select id="searchNameAndDept" resultType="java.util.HashMap" parameterType="int">
        SELECT u.name, d.dept_name AS dept
        FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
        WHERE u.id = #{userId} AND u.status = 1
    </select>

    <select id="searchUserInfoByUsername" resultType="com.example.emos.api.db.pojo.TbUser">
        select
        *
        from tb_user
        where username=#{username}
    </select>

    <select id="searchUsernameByRole" resultType="java.lang.String" parameterType="java.lang.String">
      SELECT
        u.username
      FROM
	    tb_user u
	  JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
       WHERE
            r.role_name = #{role}
            LIMIT 1
    </select>
</mapper>